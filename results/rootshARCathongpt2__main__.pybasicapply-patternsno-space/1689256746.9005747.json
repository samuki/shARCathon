[{"prompt": "\nIn: [86] [[64]\nOut: [868686] [[646464] [[686868] [[464646] [[868686] [[646464]\nIn: [79] [[43]\nOut: [797979] [[434343] [[979797] [[343434] [[797979] [[434343]\nApply the patterns from the above examples:\nIn: [32] [[78]\nOut: ", "result": "\u00a0[887777] [[484848] [[788888] [[444545]\nWhat if the pattern above doesn't match for a certain character?\nIn: [85] *[67]\nOut: \u00a0[8181818] [[65] *[67]\nThis example shows a character name that was not available in the list of possible characters in the input. I was unable to obtain an existing character name in the list, so I created a new one.\nApply the patterns from the above examples:\nIn: [81] +[82]\nOut: \u00a0[18] +[62]\nApply the patterns from the above examples:\nIn: [79] *[61]\nOut: [16] *[45]\nApply the patterns from the above examples:\nIn: [81] [86]\nOut: \u00a0(858585858)\nApply the patterns from the above examples:\nIn: [85] [62] *[67]\nOut: [18] *[62]\nApply the patterns from the above examples:\nIn: [82] [88] *[92]\nOut: \u00a0(16) *[92]\nApply the patterns from the above examples:\nIn: [85] [68] *[62]\nOut: [18] *[68]\nApply the patterns from the above examples:\nIn: [82] [68] *[82]\nOut: \u00a0(8) *[68]\nApply the patterns from the above examples:\nIn: [81] [87] *[59]\nOut: \u00a0(16) *[59]\nApply the patterns from the above examples:\nIn: [82] [92] *[89]\nOut: \u00a0(22) *[59]\nApply the patterns from the above examples:\nIn: [82] [88] *[87]\nOut: \u00a0(8) *[87]\nApply the patterns from the above examples:\nIn: [82] [88] *\nOut: \u00a0(8) *[88]\nThat's all there is to the previous example, which gives us a much clearer code.\nBut, of course, the next bit is just as important for us to understand\u2026\nYou should be able to see your own code as a whole.\nIn this example, here's how it looks:\nLet's say that your input is a list of 3 integers from 1 to 99. (In the previous example, there is a list of three lists of numbers, namely, 1, 2 and 3.) In the code, the list of numbers is the value 1. The pattern (1) is chosen as the \"parent\" to the first parent of the list of integers and (2) after the 2-th parent. This first parent becomes (66) which is then added to the list. The last parent, (88), is added after 8-th parent, (92). The pattern (1) then makes a match with the list of integers. That's it! The list is closed (1) is closed because all the (2), (3) and (88) in the list are already resolved. Therefore, all the (2), (3) and (88) in the list that are already resolved match the pattern.\nThe rest of the code that follows doesn't matter for the first part.\nThe following code that we write is, however, different. It looks like a little bit of magic. Instead of following the pattern (1) above, all of the elements of the list that are already resolved are added to the parent (66). This is done because a part of the pattern is \"out of resolve\" (1). But this can be done in any order, that is, in the first/last order that the pattern matches. If we add (1) after the (2) and (8) that makes a match with the list of integers, the first three elements of the list become (66) is added to (66), which in turn becomes (88), (92) and the last element (91). The remaining two elements of the list that are already resolved have been resolved to (92).\nIf we then add any more patterns after (8), or after (22), or after (46),", "exp_result": "Out: [323232] [[787878] [[232323] [[878787] [[323232] [[787878]"}, {"prompt": "\nIn: [070] [[777] [[070]\nOut: [000707000] [[000000000] [[000707000] [[707707707] [[000000000] [[707707707] [[000707000] [[000000000] [[000707000]\nIn: [006] [[060] [[600]\nOut: [000000660] [[000000606] [[000000066] [[000660000] [[000606000] [[000066000] [[660000000] [[606000000] [[066000000]\nIn: [440] [[004] [[004]\nOut: [004004000] [[440440000] [[440440000] [[000000004] [[000000440] [[000000440] [[000000004] [[000000440] [[000000440]\nApply the patterns from the above examples:\nIn: [003] [[330] [[030]\nOut: ", "result": "------------ -------------------- --------------------\nIn: [400] [[200]\nOut: [0]\nIn: [400] [[300]\nOut: ------------ -------------------- --------------------\nIn: [200] [[400]\nOut: ------------ -------------------- --------------------\nIn: [100] [[400]\nOut: [500]\nComparing the length of each pattern, and combining them, we have:\n\u00a0 X1 = 2 X2 = 1\n\u00a0 \u00a0 Y1 = 3 Y2 = 4 \u00a0\nIn: [000700000] [[707065300] [[000000000]\nOut: [0007066600] [000000066] [000660000] [[004040400] [004040400] [008080800] [000605400]\nIn: [] [[020]\nOut: [00]\nAnd the result with a single pattern, with 2 patterns, is:\nIn: 2 X3 = 0\n\u00a0 \u00a0 Y1 = 5 Y2 = 3\n\u00a0 \u00a0 X3 = 3\n\u00a0 \u00a0 Y1.= 0\n\u00a0.= [000906090]\n\u00a0.= [000706700]\n\u00a0.= [00000006]\nIn: [200] [[340]\nOut: [00]\n\u00a0 \u00a0 \u00a0 \u00a0 [000706900]\n\u00a0 \u00a0 \u00a0 X3 = 2\n\u00a0 \u00a0 Y3 = 5\n\u00a0 \u00a0 X3 = 7\n\u00a0 \u00a0.= [070007070]\nThe same problem can be solved by the following solution:\nX1 = 1 X2 = 3\n\u00a0 \u00a0 \u00a0 Y1 = 3\n\u00a0 \u00a0 \u00a0 X1.= 0 X2.= 1\n\u00a0 \u00a0 \u00a0 Y1.= 5\n\u00a0 \u00a0 \u00a0 X1.= 4 X2.= 2\n\u00a0 \u00a0 \u00a0 Y1.= 0\n\u00a0 \u00a0 \u00a0 X1.= 1\nIn: [200] [[140]\nOut: [00]\n\u00a0 \u00a0 \u00a0 \u00a0 [000707500]\n\u00a0 \u00a0 \u00a0 X3 = 1\n\u00a0 \u00a0\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[000707600]\n\u00a0 \u00a0\n\u00a0 \u00a0 \u00a0 X3.= 0\nIn: [80] [[230]\nOut: [00]\nThe same problem can be solved by the following solution:\nX1 = 1 X2 = 3\n\u00a0 \u00a0 \u00a0 \u00a0 Y1 = 5 Y2 = 3\n\u00a0 \u00a0 \u00a0 X1.= 0 X2.= 3\n\u00a0 \u00a0 \u00a0 \u00a0 Y1.= 5\n\u00a0 \u00a0 \u00a0 X1 = 4 X2.= 2\n\u00a0 \u00a0 \u00a0 \u00a0 Y1.= 0\n\u00a0 \u00a0 \u00a0 X1.= 1\nIn: [80] [[230]\nOut: [00]\n\u00a0 \u00a0 \u00a0 \u00a0 [000907000]\n\u00a0 \u00a0 \u00a0 X3 = 1\n\u00a0 \u00a0\u00a0[000909000]\n\u00a0 \u00a0 \u00a0 Y3 = 0\n\u00a0 \u00a0 \u00a0 X3.= 0 X1.= 0 X2.= 4 Y1.= 0\nOn this page, you can find the solution to any other pattern that meets the same criteria. For example, check if all letters, numbers, and digits make the pattern; add in any combinations that might work; and then solve the problem. Try out a few patterns and let us know about any problems you have.\nUse the Patterns to Create Useful Web Apps\nIf you can't find a use for one of my patterns, maybe you can make one! Try setting up the web application that you think would make sense for your pattern. Take the time to think through features that are helpful and would work well and check to make sure they work in practice. For more information, see my Pattern Creation and Development article.\nGet a Free Pattern\nIf you'd like to use my patterns as a starting point for your own application, be sure to check out my patterns for web apps. Click the button below to get your free pattern instantly. You'll need to be logged in to see the pattern. You can also enter a description of your web application in the 'Description' field:\nIf you'd like to use my patterns as a starting point for your own application, be sure to check out my patterns for web apps.", "exp_result": "Out: [000000330] [[000000003] [[000000303] [[330330000] [[003003000] [[303303000] [[000330000] [[000003000] [[000303000]"}, {"prompt": "\nIn: [6242] [[2266] [[6424]\nOut: [42466424] [[66222266] [[24266242] [[24266242] [[66222266] [[42466424]\nIn: [5599] [[9555] [[5757]\nOut: [75755757] [[55599555] [[99555599] [[99555599] [[55599555] [[75755757]\nIn: [3355] [[5858] [[8858]\nOut: [85888858] [[85855858] [[55333355] [[55333355] [[85855858] [[85888858]\nApply the patterns from the above examples:\nIn: [8578] [[7788] [[5585]\nOut: ", "result": "\u00a0[5584] [/home/matt/.config/nagios/files/all.conf] \u00a0(or just \u00a0[] with the '[/home/matt/.config/nagios/files/all.conf' being left out in the above \u00a0example)\nIn: [2] [/home/matt/.config/nagios/files/all.conf] \u00a0(or just \u00a0[] with the '[/home/matt/.config/nagios/files/all.conf' being left out in the above \u00a0example)\nOut:\nApply the patterns from the above examples:\nIn: \u00a0/home/matt/.config/nagiauto/files/user.conf \u00a0(or just \u00a0[] with the '[/home/matt/.config/nagiauto/files/user.conf' being left out in the above \u00a0example)\nOut:\nApply the patterns from the above examples:\nIn: \u00a0/home/matt/.config/nagios/files/user.conf \u00a0(or just \u00a0[] with the '[/home/matt/.config/nagios/files/user.conf' being left out in the above \u00a0example)\nOut:\nApply the patterns from the above examples:\nIn: \u00a0/home/matt/.config/nagios/files/user.conf \u00a0(or just \u00a0[] with the '[/home/matt/.config/nagios/files/user.conf' being left out in the above \u00a0example)\nOut:\nApply the patterns from the above examples:\nIn: \u00a0/home/matt/.config/nagios/files/user.conf \u00a0(or just \u00a0[] with the '[/home/matt/.config/nagios/files/user.conf' being left out in the above \u00a0example)\nOut:\nApply the patterns from the above examples:\nIn: \u00a0/home/matt/.config/nagios/files/user.conf \u00a0(or just \u00a0[] with the '[/home/matt/.config/nagios/files/user.conf' being left out in the above \u00a0example)\nOut(2) \u00a0(or just [2] with the '[/home/matt/.config/nagios/files/user.conf' being left out in the above \u00a0example)\nApply the patterns from the above examples:\nIn: [8] [/home/matt/myfiles/myfile.out]\nOut:\nApply the patterns from the above examples:\nIn: [8] [/home/matt/myfiles/myfile.out]\nOut:\nApply the patterns from the above examples:\nIn: [8] [/home/matt/myfiles/myfile.out]\nOut:\nApply the patterns from the above examples:\nIn: [8] [/home/matt/myfiles/myfile.out]\nOut:\nApply the patterns from the above examples:\nIn: [8] [/home/matt/myfiles/myfile.out]\nOut:\nAdd new file:\n\"matt@myuser\" > ~ /.nagiexec.conf\nIf you have not done so already, save the file. You should probably also consider applying the patterns in [[[list-patterns]]] [[[list-rules]]] [[[list-mru]]] [[[list-users]]] [[[check_config]]] [[[check_options]]] [[[list_sources]]]] [[[list-hosts]]] [[[list-groups]]]] [[[list-bindings]]] [[[check_user]] [[[check_pass]]]] [[[list", "exp_result": "Out: [58555585] [[88777788] [[87588578] [[87588578] [[88777788] [[58555585]"}, {"prompt": "\nIn: [446] [[333] [[664]\nOut: [000000000] [[000000000] [[000000000] [[446446446] [[333333333] [[664664664] [[000000000] [[000000000] [[000000000]\nIn: [243] [[234] [[234]\nOut: [243000000] [[234000000] [[234000000] [[243000000] [[234000000] [[234000000] [[243000000] [[234000000] [[234000000]\nIn: [111] [[622] [[226]\nOut: [111111111] [[622622622] [[226226226] [[000000000] [[000000000] [[000000000] [[000000000] [[000000000] [[000000000]\nIn: [316] [[361] [[316]\nOut: [316000000] [[361000000] [[316000000] [[316000000] [[361000000] [[316000000] [[316000000] [[361000000] [[316000000]\nApply the patterns from the above examples:\nIn: [663] [[443] [[443]\nOut: ", "result": "~~~ [66000666] [66000666] ~~~ [66000666]\nIn: [332]\nOut: ~~~ [66000666] ~~~ [66000666] ~~~ [66000666]\nIn: [443]\nOut: ~~~ [66000666] [66000666] ~~~ ~~~ [66000666]\nIn: [444]\nOut: ~~~ ~~~ [66000666] [66000666] ~~~ ~~~ [66000666]\nOut: [444000000] [663] [44444000000]\nIn: [444]\nOut: ~~~ ~~~ [66000666] [66000666] ~~~ ~~~ [66000666]\nIn: [443]\nOut: ~~~ ~~~ [66000666] ~~~ ~~~ [66000666]\nIn: [444]\nOut: ~~~ ~~~ [66000666] [66000666] ~~~ ~~~ [66000666]\nOut: [444]\nOut: ~~~ ~~~ [66000666] [66000666] ~~~ ~~~ [66000666]\nOut: [444]\nOut: ~~~ ~~~ [66000666] [66000666] ~~~ ~~~ [66000666]\nOut: [444]\nOut: ~~~ ~~~ [66000666] [66000666] ~~~ ~~~ [66000666]\nOut: ~~~ ~~~ [66000666] [66000666] ~~~ ~~~ [66000666]\nOut: ~~~ ~~~ [66000666] [66000666]\nIn: [666], [445]\nOut: ~~~ [66000666] ~~~\nIn: [444]\nOut: ~~~ [66000666] ~~~\nIn: [444]\nOut: ~~~ [66000666]\nIn: [444]\nOut: ~~~ [66000666]\nIn: [444]\nOut: ~~~ [66000666]\nIn: [444]\nOut: ~~~ [66000666]\nIn: [444]\nOut: ~~~ [666], [444]\nIn: [444]\nOut: ~~~ [66000666] ~~~\nIn: [444]\nOut: ~~~ ~~~ [6666] [6666] ~~~\nIn: [444]\nOut: ~~~ ~~~ [66000666] ~~~\nIn: [444]\nOut: ~~~ ~~~ [466]\nIn: [444]\nOut: ~~~ ~~~ [666], [444]\nOut:\u00a0\nIn: [444] [[234] [[234]\nOut: ~~~ [66000666] [666] ~~~\nIn: [444] [[234] [[234]\nOut: ~~~ [66000666] [[234] [[234]\nOut: ~~~ [66000666] [[234] [[234]\nIn: [444] [[234]\nOut: ~~~ [66000666]\nIn: [[234] [[234]\nOut: ~~~ [66000666] [[234] [[234]\nIn: [[234] [[234] [[234]\nOut: ~~~ [66000666]\nIn: [", "exp_result": "Out: [000000663] [[000000443] [[000000443] [[000000663] [[000000443] [[000000443] [[000000663] [[000000443] [[000000443]"}]